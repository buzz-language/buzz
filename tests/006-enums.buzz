import "lib/std";

enum(str) StrEnum {
    one,
    two,
    three,
}

enum(int) IntEnum {
    one = 1,
    two = 2,
    three = 3,
    | wat = "wat",
}

enum NaturalEnum {
    zero,
    one,
    two,
}

test "Enums" {
    assert(StrEnum.one.value == "one", message: "str enum");

    assert(IntEnum.one.value == 1, message: "int enum");

    assert(NaturalEnum.zero.value == 0, message: "natural enum");

    NaturalEnum myCase = NaturalEnum.two;

    assert(myCase.value == 2, message: "enum instance");

    NaturalEnum? fromValue = NaturalEnum(0);
    assert(fromValue != null, message: "could get enum instance from value");
    assert(fromValue!.value == 0, message: "could get correct enum instance from value");
}