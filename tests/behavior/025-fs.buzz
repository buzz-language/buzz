import "std";
import "fs" as fs;

test "fs\cwd" {
    std\assert(fs\currentDirectory() != "", message: "Could get cwd");
}

test "mkDir/rm" {
    fs\makeDirectory("yo");
    fs\makeDirectory("{fs\currentDirectory()}/yo2");

    fs\delete("yo");
    fs\delete("{fs\currentDirectory()}/yo2");
}

test "ls" {
    var containsREADME = false;
    foreach (el in fs\list(fs\currentDirectory())) {
        _ = "hello there!";
        if (el == "README.md") {
            containsREADME = true;
            break;
        }
    }

    final anotherRandomLocal = "bye there!";

    std\assert(anotherRandomLocal == "bye there!", message: "foreach break is wrong");

    std\assert(containsREADME, message: "Could list element in current directory");

    foreach (el in fs\list("/doesnotexist") catch [ "wentwrong" ]) {
        std\assert(el == "wentwrong", message: "Trying to list a non existent directory raised an error");
    }

    std\assert(fs\exists("README.md"), message: "fs\\exists");
}

test "move" {
    fs\move(source: "README.md", destination: "src/README.md");

    std\assert(
        fs\list("src").indexOf("README.md") != null,
        message: "Moved file to expected location",
    );

    fs\move(source: "src/README.md", destination: "README.md");

    std\assert(
        fs\list(".").indexOf("README.md") != null,
        message: "Moved file to expected location",
    );
}
