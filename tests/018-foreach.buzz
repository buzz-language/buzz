import "lib/std";

test "foreach on list" {
    [int] list = [1, 2, 3];

    int sum = 0;
    foreach (int index, int item in list) {
        print("{index} {item}");
        sum = sum + item;
    }

    assert(sum == 6, message: "foreach on list");
}

test "list.next" {
    [int] list = [1, 2, 3];

    assert(list.next(null) == 0, message: "calling next native");
    assert(list.next(0) == 1, message: "calling next native");
}

test "foreach on map" {
    {str, int} map = {
        "one": 1,
        "two": 2,
        "three": 3
    };

    int sum = 0;
    foreach (str key, int value in map) {
        sum = sum + value;
    }

    assert(sum == 6, message: "foreach on map");
}

enum Hey {
    one,
    two,
    three,
}

test "foreach on enum" {
    int sum = 0;
    foreach (Hey case in Hey) {
        sum = sum + case.value;
    }

    assert(sum == 3, message: "foreach on enum");
}

test "foreach on str" {
    str hello = "";
    foreach (int index, str char in "hello world") {
        hello = "{hello}{char}";
    }

    assert(hello == "hello world", message: "foreach on str");
}