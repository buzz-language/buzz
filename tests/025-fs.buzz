import "lib/std";
import "lib/fs" as fs;

test "fs.cwd" {
    assert(fs.currentDirectory() != "", message: "Could get cwd");
}

test "mkDir/rm" {
    fs.makeDirectory("yo");
    fs.makeDirectory("{fs.currentDirectory()}/yo2");

    fs.delete("yo");
    fs.delete("{fs.currentDirectory()}/yo2");
}

test "ls" {
    bool containsREADME = false;
    foreach (int i, str el in fs.list(fs.currentDirectory())) {
        str randomLocal = "hello there!";
        if (el == "README.md") {
            containsREADME = true;
            break;
        }
    }

    str anotherRandomLocal = "bye there!";

    assert(anotherRandomLocal == "bye there!", message: "foreach break is wrong");

    assert(containsREADME, message: "Could list element in current directory");

    foreach (int i, str el in fs.list("/doesnotexist") catch ["wentwrong"]) {
        assert(el == "wentwrong", message: "Trying to list a non existent directory raised an error");
    }
}

test "move" {
    fs.move(source: "README.md", destination: "lib/README.md");

    assert(
        fs.list("lib").indexOf("README.md") != null,
        message: "Moved file to expected location"
    );

    fs.move(source: "lib/README.md", destination: "README.md");

    assert(
        fs.list(".").indexOf("README.md") != null,
        message: "Moved file to expected location"
    );
}